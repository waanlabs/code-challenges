name: Code Cleanup & Testing
on:
  push:
    branches:
        - WR-54
  pull_request:
    branches:
        - main
        - python

jobs:
  autoflake:
    name: "Unused imports (autoflake)"
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install autoflake
      run: pip install autoflake

    - name: Run autoflake
      run: autoflake --check code_challenges

  isort:
    name: "Sort imports (isort)"
    needs: autoflake
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install isort
      run: pip install isort

    - name: Run isort
      run: isort --check code_challenges

  black:
    name: "Format code (black)"
    needs:
      - autoflake
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install black
      run: pip install black

    - name: Run black
      run: black code_challenges

  mypy:
    name: "Type checker (mypy)"
    needs: black
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install mypy
        run: pip install mypy

      - name: Run mypy
        run: mypy code_challenges

  flake:
    name: "Linter (flake8)"
    needs: black
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install flake8
      run: pip install flake8

    - name: Run flake8
      run: flake8 code_challenges

  pylint:
    name: "Static Analysis (Pylint)"
    needs: mypy
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install pylint
      run: pip install pylint

    - name: Run pylint
      run: pylint code_challenges

  test-coverage:
    name: "Pytest and Coverage"
    needs:
      - pylint
      - flake
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install pytest and coverage
      run: pip install pytest pytest-cov coverage

    - name: Run pytest
      run: pytest --cov=code_challenges --cov-report=xml

    - name: Show coverage
      run: coverage report

  bandit:
    name: "Security checker (bandit)"
    needs: pylint
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install bandit
      run: pip install bandit

    - name: Run banditd
      run: bandit -r code_challenges

  radon-cc:
    name: "Complexity index (radon)"
    needs:
      - flake
      - pylint
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install radon
      run: pip install radon

    - name: Run radon
      run: radon cc -a -s code_challenges

  radon-mi:
    name: "Maintainability index (radon)"
    needs:
      - flake
      - pylint
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install radon
      run: pip install radon

    - name: Run radon
      run: radon mi code_challenges
